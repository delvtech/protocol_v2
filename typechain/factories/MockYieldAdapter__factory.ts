/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockYieldAdapter,
  MockYieldAdapterInterface,
} from "../MockYieldAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "mockYearnVault",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_linkerCodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NonLinkerCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "UNLOCKED_PT_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNLOCKED_YT_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "batchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "finalizedTerms",
    outputs: [
      {
        internalType: "uint128",
        name: "pricePerShare",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "interest",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "linkerCodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "assetIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "assetAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "underlyingAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "ytDestination",
        type: "address",
      },
      {
        internalType: "address",
        name: "ptDestination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ytBeginDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "one",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "perTokenApprovals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setApprovalBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sharesPerExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "transferFromBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "unlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract MockERC20YearnVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "yieldTerms",
    outputs: [
      {
        internalType: "uint128",
        name: "shares",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "pt",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101408060405234620001ab57608081620025198038038091620000248285620001b0565b833981010312620001ab576200003a81620001ea565b60208201519160606200005060408301620001ea565b9101516001600160a01b03919082811690818103620001ab5760049560209360805260a05260c0526040519485809263313ce56760e01b82525afa9283156200019f5760009362000152575b508260e052600160ff61010094161b8352610120911681526040519061231992836200020084396080518381816102cc01528181610b300152610d7b015260a05183818161031f01528181610ae00152610dce015260c051838181610160015261088e015260e05183610f5a015251828181610c7801528181611e470152818161205501526121410152518181816101b4015281816104f1015281816105cf0152818161097e01528181611d7c01526122680152f35b6020939193813d821162000196575b816200017060209383620001b0565b810103126200019257519060ff821682036200018f575091386200009c565b80fd5b5080fd5b3d915062000161565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620001d457604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001ab5756fe6040608081526004908136101561001557600080fd5b600091823560e01c908162ad800c1461124d57816309630c2e1461120257816317fad7fc146110135781631c0f12b614610fdf57816321ff32a914610f7e578163313ce56714610f405781633656eec214610ef35781634123256014610ed857816342b7d39414610eb05781634e41a1fb14610e7b5781634ed2d6ac14610cea5781637b7615d114610c9b578163901717d114610c605781639cd241af14610c01578163a22cb46514610b80578163bd85b03914610b54578163c45a015514610b03578163c905a4b514610ac8578163cca0eb2414610681578163d0c555cc14610646578163ddda35cd146103a0578163e44808bc1461023257508063e985e9c5146101d8578063fbfa77cf146101885763fc0c546a1461013557600080fd5b346101845781600319360112610184576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b50346101845781600319360112610184576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461018457806003193601126101845760ff816020936101f7611445565b6101ff61146d565b73ffffffffffffffffffffffffffffffffffffffff91821683526002875283832091168252855220549151911615158152f35b8383346101845760a060031936011261018457823561024f61146d565b90610258611490565b6102606114d6565b845130602082019081526040808301869052825291949173ffffffffffffffffffffffffffffffffffffffff91601f19919061029d6060826112c1565b51902087517fff00000000000000000000000000000000000000000000000000000000000000602082019081527f000000000000000000000000000000000000000000000000000000000000000060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201929092527f00000000000000000000000000000000000000000000000000000000000000006055820152909161035b9082607581015b039081018352826112c1565b5190201633036103785761037594959650606435926115d7565b51f35b8685517f8bea3737000000000000000000000000000000000000000000000000000000008152fd5b9050823461055e57606060031936011261055e576103bc611445565b9067ffffffffffffffff90602435828111610184576103de903690860161152a565b91604435908111610184576103f6903690860161152a565b9481809481955b8551871015610466576104276104138888611774565b5161041e898c611774565b51903390611c13565b50906104338888611774565b516104515761044b91610445916115cb565b966116c1565b956103fd565b969461044b91610460916115cb565b946116c1565b939190878295839480610574575b508061048f575b602086610488878a6115cb565b9051908152f35b83945060649060209394875195869485937fe63697c800000000000000000000000000000000000000000000000000000000855260011c9084015273ffffffffffffffffffffffffffffffffffffffff809116602484015261271060448401527f0000000000000000000000000000000000000000000000000000000000000000165af1918215610569578092610530575b5083905061048860208661047b565b9091506020823d8211610561575b8161054b602093836112c1565b8101031261055e57505182610488610521565b80fd5b3d915061053e565b8351903d90823e3d90fd5b9096508551907fe63697c8000000000000000000000000000000000000000000000000000000008252828201526020816064818773ffffffffffffffffffffffffffffffffffffffff808916602484015261271060448401527f0000000000000000000000000000000000000000000000000000000000000000165af190811561063c578491610607575b509587610474565b90506020813d8211610634575b81610621602093836112c1565b810103126106305751876105ff565b8380fd5b3d9150610614565b86513d86823e3d90fd5b505034610184578160031936011261018457602090517f80000000000000000000000000000000000000000000000000000000000000008152f35b839150346101845760e06003193601126101845767ffffffffffffffff908035828111610630576106b5903690830161152a565b91602435908111610630576106cd903690830161152a565b91604435926106da6114b3565b956106e36114d6565b60c4359060a435428110610ac35750425b6106ff42841161170f565b8896899884159182600014610abc576001905b8261086c575b505050899897989a8a998b9a5b89518c1015610798578b6107569161074d8b61041e848f8161074691611774565b5192611774565b9390928d611774565b5161077f579161076c61077292610778946115cb565b9c6115cb565b9b6116c1565b9a99610725565b9b9e9161079261077292610778946115cb565b9f6115cb565b936107f295938b8f948f958a98839b966107da985081838760001461085b57506107c1916115cb565b905b81956000146108305750508061081a575b5061188d565b916107e58386611591565b6107ff575b505082611591565b9082519182526020820152f35b6108139161080d8487611591565b91611788565b84806107ea565b92610829919360011c906115cb565b918b6107d4565b909161083e575b505061188d565b61085392945061084d90611806565b906115cb565b918b80610837565b9050610866916115cb565b906107c3565b90919c9b9a508a92995073ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000169d8e8951917f23b872dd000000000000000000000000000000000000000000000000000000008352338584015230602484015260448301528160648160209889945af18015610ab257610a7b575b508360249c9d9e89519d8e80927f70a0823100000000000000000000000000000000000000000000000000000000825230878301525afa9b8c15610a3c578d9c610a46575b50838d9160448e8b5194859384927f6e553f65000000000000000000000000000000000000000000000000000000008452888401523060248401527f0000000000000000000000000000000000000000000000000000000000000000165af1938415610a3c578d94610a08575b505060028210156109dc57506001036109d6576109ca90611806565b975b97968b8080610718565b976109cc565b8b60216024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9080929450813d8311610a35575b610a2081836112c1565b81010312610a315751918d806109ae565b8b80fd5b503d610a16565b88513d8f823e3d90fd5b909d9c9b508381813d8311610a74575b610a6081836112c1565b81010312610a3157519b9c9a9b9a83610941565b503d610a56565b8481813d8311610aab575b610a9081836112c1565b81010312610aa7575180151503610a31578e6108fc565b8c80fd5b503d610a86565b89513d8f823e3d90fd5b8b90610712565b6106f4565b505034610184578160031936011261018457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101845781600319360112610184576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b905034610b7c576020600319360112610b7c5760209282913581526001845220549051908152f35b8280fd5b505034610184578060031936011261018457610b9a611445565b6024359081151580920361063057338452600260205273ffffffffffffffffffffffffffffffffffffffff838520911684526020528183209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905551f35b905034610b7c576060600319360112610b7c5761037590610c2061146d565b90356000908152600360209081526040808320338452825280832073ffffffffffffffffffffffffffffffffffffffff9094168352929052206044359055565b505034610184578160031936011261018457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b905034610b7c576020600319360112610b7c5735825260076020908152918190205490516fffffffffffffffffffffffffffffffff8216815260809190911c91810191909152604090f35b0390f35b905034610b7c576080600319360112610b7c578035610d0761146d565b610d0f6114b3565b845130602082019081526040808301869052825291949173ffffffffffffffffffffffffffffffffffffffff91601f199190610d4c6060826112c1565b51902087517fff00000000000000000000000000000000000000000000000000000000000000602082019081527f000000000000000000000000000000000000000000000000000000000000000060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201929092527f000000000000000000000000000000000000000000000000000000000000000060558201529091610e0290826075810161034f565b519020163303610e5457509061037592916044359190604092936000928352600360205283832073ffffffffffffffffffffffffffffffffffffffff8092168452602052838320911682526020522055565b84517f8bea3737000000000000000000000000000000000000000000000000000000008152fd5b905034610b7c576020600319360112610b7c5781610ce693610ea5923581526005602052206112e4565b9051918291826113ed565b905034610b7c576020600319360112610b7c5760209282913581526006845220549051908152f35b50503461018457816003193601126101845751908152602090f35b905034610b7c5781600319360112610b7c576020928291610f1261146d565b9035825281855273ffffffffffffffffffffffffffffffffffffffff83832091168252845220549051908152f35b5050346101845781600319360112610184576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b905034610b7c576060600319360112610b7c576020928291610f9e61146d565b610fa6611490565b913583526003865283832073ffffffffffffffffffffffffffffffffffffffff8092168452865283832091168252845220549051908152f35b905034610b7c576080600319360112610b7c5761037590610ffe61146d565b90611007611490565b339260643592356115d7565b905034610b7c576080600319360112610b7c5761102e611445565b9061103761146d565b67ffffffffffffffff92906044358481116111fe5761105990369085016114f9565b9290946064359081116111fa5761107390369086016114f9565b93909473ffffffffffffffffffffffffffffffffffffffff8084161561119d57841615611140578482036110e35750875b8181106110b057888851f35b806110d9876110c36110de94868c6116d0565b3587876110d2868c33966116d0565b35926115d7565b6116c1565b6110a4565b60649060208951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601e60248201527f69647320616e642076616c756573206c656e677468206d69736d6174636800006044820152fd5b60649060208951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f7472616e7366657220746f20746865207a65726f2061646472657373000000006044820152fd5b60648260208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601e60248201527f7472616e736665722066726f6d20746865207a65726f206164647265737300006044820152fd5b8780fd5b8680fd5b905034610b7c576020600319360112610b7c5735825260086020908152918190205490516fffffffffffffffffffffffffffffffff8216815260809190911c91810191909152604090f35b905034610b7c576020600319360112610b7c5781610ce69382610ea593358252602052206112e4565b6040810190811067ffffffffffffffff82111761129257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f601f19910116810190811067ffffffffffffffff82111761129257604052565b906040516000835490600182811c908084169687156113e3575b60209485841089146113b657869798848897985290816000146113755750600114611336575b505050611333925003826112c1565b90565b600090815285812095935091905b81831061135d5750506113339350820101388080611324565b85548784018501529485019486945091830191611344565b9150506113339593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b820101388080611324565b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b91607f16916112fe565b919091602080825283519081818401526000945b82861061142f575050601f81601f19926040959611611422575b0116010190565b600085828601015261141b565b8581018201518487016040015294810194611401565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361146857565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361146857565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361146857565b6064359073ffffffffffffffffffffffffffffffffffffffff8216820361146857565b6084359073ffffffffffffffffffffffffffffffffffffffff8216820361146857565b9181601f840112156114685782359167ffffffffffffffff8311611468576020808501948460051b01011161146857565b9080601f830112156114685781359067ffffffffffffffff8211611292578160051b6040519360209361155f858401876112c1565b85528380860192820101928311611468578301905b828210611582575050505090565b81358152908301908301611574565b81811061159c570390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8119811161159c570190565b9161164193949160409373ffffffffffffffffffffffffffffffffffffffff808093169416848103611645575b5060009381855284602052858520908552602052848420611626888254611591565b905583528260205283832091168252602052209182546115cb565b9055565b6000858152602091600283528792838320828452815260ff848420541615611670575b505050611604565b84835260038152838320888452815283832082845281526000198484205403156116685784835260038152838320888452815283832091835252206116b6888254611591565b905538808080611668565b600019811461159c5760010190565b91908110156116e05760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1561171657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f746f646f206e696365206572726f7200000000000000000000000000000000006044820152fd5b80518210156116e05760209160051b010190565b611641916040916000918183528260205273ffffffffffffffffffffffffffffffffffffffff848420911683526020528282206117c68682546115cb565b905581526001602052209182546115cb565b906040516117e581611276565b91546fffffffffffffffffffffffffffffffff8116835260801c6020830152565b80600019046002118115151661159c5760011b90565b806000190482118115151661159c570290565b8115611839570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b906fffffffffffffffffffffffffffffffff808093169116809203811161159c570190565b9192939093811560001461198357505073ffffffffffffffffffffffffffffffffffffffff1660009081527fc34d87ebb14544cb33c3e325dea3e881cd1780beb96cc6c142d139f1d4a9e26d602052604080822080549192917f800000000000000000000000000000000000000000000000000000000000000091906119149086906115cb565b9055808252600160205282822061192c8582546115cb565b90558152600760205220907fffffffffffffffffffffffffffffffff0000000000000000000000000000000082549161197a6fffffffffffffffffffffffffffffffff809216828516611868565b16911617905590565b806080959293951b7f80000000000000000000000000000000000000000000000000000000000000008119811161159c576119c0918591016115cb565b904203611a77576119d782611a5894959683611788565b604051916119e483611276565b6fffffffffffffffffffffffffffffffff90818716845216602083015260005260076020526040600020815160209092015160801b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff92909216919091179055565b6000526006602052611a7060406000209182546115cb565b9055600090565b915060009180835260209160078352611a92604085206117d8565b946fffffffffffffffffffffffffffffffff9586815116151580611c05575b15611ba7578287838180858198978280985116611ace908861181c565b90611ad89161182f565b8b82019d8e5116611ae891611591565b611af2908761181c565b8a8d5260018c5260408d2054611b079161182f565b9d8e98611b14918c611788565b51169116611b2191611868565b98511692611b2e91611591565b16611b3891611868565b8160405196611b4688611276565b1686521682850152825260079052604090209061133391815160209092015160801b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff92909216919091179055565b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600f60248201527f546f646f206e696365206572726f7200000000000000000000000000000000006044820152fd5b508685820151161515611ab1565b9290926fffffffffffffffffffffffffffffffff808216904282118015906121cb575b611c3f9061170f565b60009180835260209160088352604094611c5a8686206117d8565b90828583015116156120f4575b7f800000000000000000000000000000000000000000000000000000000000000093818503611e0357505050968160049697988493865260078452611d1e8a611cca611cb9848b8b2054169d8e61181c565b858a52600188528a8a20549061182f565b9b8c91858a528988528a8a2073ffffffffffffffffffffffffffffffffffffffff8098168b5288528a8a20611d00828254611591565b9055858a5260018852611d178b8b20918254611591565b9055611591565b1690855260078352858520907fffffffffffffffffffffffffffffffff000000000000000000000000000000008254161790558451958680927f99530b060000000000000000000000000000000000000000000000000000000082527f0000000000000000000000000000000000000000000000000000000000000000165afa928315611df857508592829190611dc2575b5050611dbc925061181c565b60011c90565b849193508092503d8311611df1575b611ddb81836112c1565b8101031261055e575082611dbc91513880611db0565b503d611dd1565b51913d9150823e3d90fd5b909299919798969594935060018360ff1c1460001461203e5782855260078452611e2e8686206117d8565b968a8089511699511698808c048a1181151516612011577f0000000000000000000000000000000000000000000000000000000000000000998c939291611e79918c9102851661182f565b93868a019484865116611e8b91611591565b9286895260018852828a8a2054948591611ea49161181c565b90611eae9161182f565b9d8c8f611ebb819f612223565b91611ec59161181c565b90611ecf9161182f565b9c828b5260068a528d8c8c2090815490611ee891611591565b9055169089526008885289892090815460801c818110611fe4579386611f8387611fe09f9e9d9c9a98958f84869160079f9d9b838f9c611f8f9d611f72611f7e98611f7e9e611f7796036fffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffff0000000000000000000000000000000083549260801b169116179055565b6121d3565b511661181c565b61182f565b168c528486511661181c565b16905283525220815160209092015160801b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff92909216919091179055565b9190565b60248b7f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b5097958295828594939695526006835284842054917f0000000000000000000000000000000000000000000000000000000000000000809961207f82612223565b998a930151169061208f9161181c565b906120999161182f565b6120a39083611591565b6120ad908261181c565b86855260018452858520546120c19161182f565b998a916120ce91886121d3565b6120d791611591565b9382526006905220556120ea908461181c565b906113339161182f565b9050858284878261216689611f7e61213e8851986121118a611276565b868a52838a0196808852888152600685526001828220549561213287612223565b9a835252205487611591565b957f00000000000000000000000000000000000000000000000000000000000000009061181c565b92169052168152838652600885526121c581888820815160209092015160801b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff92909216919091179055565b90611c67565b508115611c36565b611641916040916000918183528260205273ffffffffffffffffffffffffffffffffffffffff84842091168352602052828220612211868254611591565b90558152600160205220918254611591565b90604051917f99530b0600000000000000000000000000000000000000000000000000000000835260208360048173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa9283156122d7576000936122a4575b50611333919261181c565b6020813d82116122cf575b816122bc602093836112c1565b8101031261063057519250611333612299565b3d91506122af565b6040513d6000823e3d90fdfea264697066735822122031d890f18d50d9f948da2735709405782176abdcda69527168351a6d53791bd264736f6c634300080f0033";

type MockYieldAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockYieldAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockYieldAdapter__factory extends ContractFactory {
  constructor(...args: MockYieldAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    mockYearnVault: string,
    _linkerCodeHash: BytesLike,
    _factory: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockYieldAdapter> {
    return super.deploy(
      mockYearnVault,
      _linkerCodeHash,
      _factory,
      _token,
      overrides || {}
    ) as Promise<MockYieldAdapter>;
  }
  getDeployTransaction(
    mockYearnVault: string,
    _linkerCodeHash: BytesLike,
    _factory: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      mockYearnVault,
      _linkerCodeHash,
      _factory,
      _token,
      overrides || {}
    );
  }
  attach(address: string): MockYieldAdapter {
    return super.attach(address) as MockYieldAdapter;
  }
  connect(signer: Signer): MockYieldAdapter__factory {
    return super.connect(signer) as MockYieldAdapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockYieldAdapterInterface {
    return new utils.Interface(_abi) as MockYieldAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockYieldAdapter {
    return new Contract(address, _abi, signerOrProvider) as MockYieldAdapter;
  }
}
