/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockMultiToken,
  MockMultiTokenInterface,
} from "../MockMultiToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_linkerCodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NonLinkerCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "batchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "linkerCodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "perTokenApprovals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setApprovalBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "setNameAndSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "transferFromBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c03461009857601f61115a38819003918201601f19168301916001600160401b0383118484101761009d5780849260409485528339810103126100985780516020909101516001600160a01b03811681036100985760805260a0526040516110a690816100b482396080518181816101c901528181610309015261077e015260a05181818161021c015281816102b901526107d10152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c908162ad800c14610bee57816317fad7fc146109d65781631c0f12b6146109a257816321ff32a9146109415781633656eec2146108f45781633ec9d493146108b75781634e41a1fb1461087e5781634ed2d6ac146106ed578163661523b21461042c5781639cd241af146103de578163a22cb46514610359578163bd85b0391461032d578163c45a0155146102dc578163c905a4b5146102a1578163e44808bc1461012f575063e985e9c5146100d257600080fd5b3461012b578060031936011261012b5760ff816020936100f0610dd9565b6100f8610e01565b73ffffffffffffffffffffffffffffffffffffffff91821683526002875283832091168252855220549151911615158152f35b5080fd5b83833461012b5760a060031936011261012b57823561014c610e01565b90610155610e24565b6084359273ffffffffffffffffffffffffffffffffffffffff808516850361029d578551306020820190815260408083018790528252601f199161019a606082610c6a565b51902087517fff00000000000000000000000000000000000000000000000000000000000000602082019081527f000000000000000000000000000000000000000000000000000000000000000060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201929092527f0000000000000000000000000000000000000000000000000000000000000000605582015290916102589082607581015b03908101835282610c6a565b519020163303610275576102729495965060643592610f17565b51f35b8685517f8bea3737000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b50503461012b578160031936011261012b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461012b578160031936011261012b576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b9050346103555760206003193601126103555760209282913581526001845220549051908152f35b8280fd5b50503461012b578060031936011261012b57610373610dd9565b602435908115158092036103da57338452600260205273ffffffffffffffffffffffffffffffffffffffff838520911684526020528183209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905551f35b8380fd5b50503461012b576102726103f136610e78565b6000928352600360209081526040808520338652825280852073ffffffffffffffffffffffffffffffffffffffff9094168552929052912055565b83833461012b57606060031936011261012b5782359267ffffffffffffffff906024358281116106e9576104639036908301610eaf565b60449691963584811161029d5761047d9036908501610eaf565b939092808852602092828452878920908781116106bd578061049f8354610c17565b9b601f9c8d8111610671575b508b908d831160011461060c578c92610601575b50506000198260011b9260031b1c19161790555b8752600582528587209484116105d557506104ee8454610c17565b878111610595575b508596831160011461053157509484958293949592610526575b50506000198260011b9260031b1c191617905551f35b013590508580610510565b90601f198316968487528287209287905b89821061057d5750508360019596979810610563575b505050811b01905551f35b60001960f88560031b161c19910135169055858080610558565b80600184968294958701358155019501920190610542565b8487528187208880860160051c8201928487106105cc575b0160051c01905b8181106105c157506104f6565b8781556001016105b4565b925081926105ad565b8660416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b013590508c806104bf565b9091601f191691848d52878d20928d5b8982821061065b575050908460019594939210610641575b505050811b0190556104d3565b60001960f88560031b161c199101351690558c8080610634565b600184968293958701358155019501920161061c565b909150838c52868c208d80850160051c8201928986106106b4575b9085949392910160051c01905b8181106106a657506104ab565b8d8155849350600101610699565b9250819261068c565b60248a6041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8480fd5b90503461035557608060031936011261035557803561070a610e01565b6064359273ffffffffffffffffffffffffffffffffffffffff808516850361029d578551306020820190815260408083018790528252601f199161074f606082610c6a565b51902087517fff00000000000000000000000000000000000000000000000000000000000000602082019081527f000000000000000000000000000000000000000000000000000000000000000060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201929092527f00000000000000000000000000000000000000000000000000000000000000006055820152909161080590826075810161024c565b51902016330361085757509061027292916044359190604092936000928352600360205283832073ffffffffffffffffffffffffffffffffffffffff8092168452602052838320911682526020522055565b84517f8bea3737000000000000000000000000000000000000000000000000000000008152fd5b90503461035557602060031936011261035557816108b3936108a892358152600560205220610cbc565b905191829182610d81565b0390f35b50503461012b576108c736610e78565b9184528360205273ffffffffffffffffffffffffffffffffffffffff838520911684526020528183205551f35b9050346103555781600319360112610355576020928291610913610e01565b9035825281855273ffffffffffffffffffffffffffffffffffffffff83832091168252845220549051908152f35b905034610355576060600319360112610355576020928291610961610e01565b610969610e24565b913583526003865283832073ffffffffffffffffffffffffffffffffffffffff8092168452865283832091168252845220549051908152f35b90503461035557608060031936011261035557610272906109c1610e01565b906109ca610e24565b33926064359235610f17565b905034610355576080600319360112610355576109f1610dd9565b906109fa610e01565b67ffffffffffffffff9260443584811161029d57610a1b9036908501610e47565b929094606435908111610bea57610a359036908601610e47565b92909373ffffffffffffffffffffffffffffffffffffffff80831615610b8d57831615610b3057838103610ad357885b818110610a7157898951f35b610a96610a7f82848b611031565b3533908686610a8f868b8d611031565b3592610f17565b6000198114610aa757600101610a65565b60248a6011897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60648660208a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601e60248201527f69647320616e642076616c756573206c656e677468206d69736d6174636800006044820152fd5b60648660208a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f7472616e7366657220746f20746865207a65726f2061646472657373000000006044820152fd5b60648760208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601e60248201527f7472616e736665722066726f6d20746865207a65726f206164647265737300006044820152fd5b8780fd5b90503461035557602060031936011261035557816108b393826108a89335825260205220610cbc565b90600182811c92168015610c60575b6020831014610c3157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610c26565b90601f601f19910116810190811067ffffffffffffffff821117610c8d57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190816000825492610ccf84610c17565b908184526001948581169081600014610d3f5750600114610cfc575b5050610cf992500382610c6a565b90565b9093915060005260209081600020936000915b818310610d27575050610cf993508201013880610ceb565b85548784018501529485019486945091830191610d0f565b9050610cf99550602093507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201013880610ceb565b919091602080825283519081818401526000945b828610610dc3575050601f81601f19926040959611610db6575b0116010190565b6000858286010152610daf565b8581018201518487016040015294810194610d95565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610dfc57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610dfc57565b6044359073ffffffffffffffffffffffffffffffffffffffff82168203610dfc57565b9181601f84011215610dfc5782359167ffffffffffffffff8311610dfc576020808501948460051b010111610dfc57565b6003196060910112610dfc576004359060243573ffffffffffffffffffffffffffffffffffffffff81168103610dfc579060443590565b9181601f84011215610dfc5782359167ffffffffffffffff8311610dfc5760208381860195010111610dfc57565b818110610ee8570390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff808093169516858103610fb4575b50600094818652856020526040862090865260205260408520610f5e858254610edd565b90558452836020526040842091168352602052604082209182549082198211610f875750019055565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b600086815260209160028352604092838320828452815260ff848420541615610fe0575b505050610f3a565b8483526003815283832089845281528383208284528152600019848420540315610fd8578483526003815283832089845281528383209183525220611026858254610edd565b905538808080610fd8565b91908110156110415760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220be0f23520a3f2e01e27d5e164adbde6887473f8fba57313b85c039fff623b7e364736f6c634300080f0033";

type MockMultiTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockMultiTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockMultiToken__factory extends ContractFactory {
  constructor(...args: MockMultiTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _linkerCodeHash: BytesLike,
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockMultiToken> {
    return super.deploy(
      _linkerCodeHash,
      _factory,
      overrides || {}
    ) as Promise<MockMultiToken>;
  }
  getDeployTransaction(
    _linkerCodeHash: BytesLike,
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _linkerCodeHash,
      _factory,
      overrides || {}
    );
  }
  attach(address: string): MockMultiToken {
    return super.attach(address) as MockMultiToken;
  }
  connect(signer: Signer): MockMultiToken__factory {
    return super.connect(signer) as MockMultiToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMultiTokenInterface {
    return new utils.Interface(_abi) as MockMultiTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockMultiToken {
    return new Contract(address, _abi, signerOrProvider) as MockMultiToken;
  }
}
