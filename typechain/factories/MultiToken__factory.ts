/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MultiToken, MultiTokenInterface } from "../MultiToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_linkerCodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NonLinkerCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "batchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "linkerCodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "perTokenApprovals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setApprovalBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "transferFromBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c03461009857601f610e1f38819003918201601f19168301916001600160401b0383118484101761009d5780849260409485528339810103126100985780516020909101516001600160a01b03811681036100985760805260a052604051610d6b90816100b482396080518181816101b3015281816102f301526104b8015260a051818181610206015281816102a3015261050b0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c908162ad800c1461090957816317fad7fc146106d35781631c0f12b61461069f57816321ff32a91461063e5781633656eec2146105f15781634e41a1fb146105b85781634ed2d6ac146104275781639cd241af146103c8578163a22cb46514610343578163bd85b03914610317578163c45a0155146102c6578163c905a4b51461028b578163e44808bc14610119575063e985e9c5146100bc57600080fd5b3461011557806003193601126101155760ff816020936100da610ae5565b6100e2610b0d565b73ffffffffffffffffffffffffffffffffffffffff91821683526002875283832091168252855220549151911615158152f35b5080fd5b8383346101155760a0600319360112610115578235610136610b0d565b9061013f610b30565b6084359273ffffffffffffffffffffffffffffffffffffffff8085168503610287578551306020820190815260408083018790528252601f1991610184606082610932565b51902087517fff00000000000000000000000000000000000000000000000000000000000000602082019081527f000000000000000000000000000000000000000000000000000000000000000060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201929092527f0000000000000000000000000000000000000000000000000000000000000000605582015290916102429082607581015b03908101835282610932565b51902016330361025f5761025c9495965060643592610bbe565b51f35b8685517f8bea3737000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b505034610115578160031936011261011557602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101155781600319360112610115576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b90503461033f57602060031936011261033f5760209282913581526001845220549051908152f35b8280fd5b50503461011557806003193601126101155761035d610ae5565b602435908115158092036103c457338452600260205273ffffffffffffffffffffffffffffffffffffffff838520911684526020528183209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905551f35b8380fd5b90503461033f57606060031936011261033f5761025c906103e7610b0d565b90356000908152600360209081526040808320338452825280832073ffffffffffffffffffffffffffffffffffffffff9094168352929052206044359055565b90503461033f57608060031936011261033f578035610444610b0d565b6064359273ffffffffffffffffffffffffffffffffffffffff8085168503610287578551306020820190815260408083018790528252601f1991610489606082610932565b51902087517fff00000000000000000000000000000000000000000000000000000000000000602082019081527f000000000000000000000000000000000000000000000000000000000000000060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260358201929092527f00000000000000000000000000000000000000000000000000000000000000006055820152909161053f908260758101610236565b51902016330361059157509061025c92916044359190604092936000928352600360205283832073ffffffffffffffffffffffffffffffffffffffff8092168452602052838320911682526020522055565b84517f8bea3737000000000000000000000000000000000000000000000000000000008152fd5b90503461033f57602060031936011261033f57816105ed936105e292358152600560205220610984565b905191829182610a8d565b0390f35b90503461033f578160031936011261033f576020928291610610610b0d565b9035825281855273ffffffffffffffffffffffffffffffffffffffff83832091168252845220549051908152f35b90503461033f57606060031936011261033f57602092829161065e610b0d565b610666610b30565b913583526003865283832073ffffffffffffffffffffffffffffffffffffffff8092168452865283832091168252845220549051908152f35b90503461033f57608060031936011261033f5761025c906106be610b0d565b906106c7610b30565b33926064359235610bbe565b90503461033f57608060031936011261033f576106ee610ae5565b906106f7610b0d565b67ffffffffffffffff92604435848111610287576107189036908501610b53565b929094606435908111610905576107329036908601610b53565b92909373ffffffffffffffffffffffffffffffffffffffff808316156108a85783161561084b578381036107ee57885b81811061076e57898951f35b61079361077c82848b610cf6565b353390868661078c868b8d610cf6565b3592610bbe565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107c257600101610762565b60248a6011897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60648660208a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601e60248201527f69647320616e642076616c756573206c656e677468206d69736d6174636800006044820152fd5b60648660208a51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f7472616e7366657220746f20746865207a65726f2061646472657373000000006044820152fd5b60648760208b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601e60248201527f7472616e736665722066726f6d20746865207a65726f206164647265737300006044820152fd5b8780fd5b90503461033f57602060031936011261033f57816105ed93826105e29335825260205220610984565b90601f601f19910116810190811067ffffffffffffffff82111761095557604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b906040516000835490600182811c90808416968715610a83575b6020948584108914610a565786979884889798529081600014610a1557506001146109d6575b5050506109d392500382610932565b90565b600090815285812095935091905b8183106109fd5750506109d393508201013880806109c4565b855487840185015294850194869450918301916109e4565b9150506109d39593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201013880806109c4565b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b91607f169161099e565b919091602080825283519081818401526000945b828610610acf575050601f81601f19926040959611610ac2575b0116010190565b6000858286010152610abb565b8581018201518487016040015294810194610aa1565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610b0857565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610b0857565b6044359073ffffffffffffffffffffffffffffffffffffffff82168203610b0857565b9181601f84011215610b085782359167ffffffffffffffff8311610b08576020808501948460051b010111610b0857565b818110610b8f570390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff808093169516858103610c5b575b50600094818652856020526040862090865260205260408520610c05858254610b84565b90558452836020526040842091168352602052604082209182549082198211610c2e5750019055565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b600086815260209160028352604092838320828452815260ff848420541615610c87575b505050610be1565b84835260038152838320898452815283832082845281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848420540315610c7f578483526003815283832089845281528383209183525220610ceb858254610b84565b905538808080610c7f565b9190811015610d065760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220b625b7dcac6cb542ddb91d5c3e6fc12ab11e9b3368bba86d3d99c9696ab79d4b64736f6c634300080f0033";

type MultiTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiToken__factory extends ContractFactory {
  constructor(...args: MultiTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _linkerCodeHash: BytesLike,
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiToken> {
    return super.deploy(
      _linkerCodeHash,
      _factory,
      overrides || {}
    ) as Promise<MultiToken>;
  }
  getDeployTransaction(
    _linkerCodeHash: BytesLike,
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _linkerCodeHash,
      _factory,
      overrides || {}
    );
  }
  attach(address: string): MultiToken {
    return super.attach(address) as MultiToken;
  }
  connect(signer: Signer): MultiToken__factory {
    return super.connect(signer) as MultiToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiTokenInterface {
    return new utils.Interface(_abi) as MultiTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiToken {
    return new Contract(address, _abi, signerOrProvider) as MultiToken;
  }
}
